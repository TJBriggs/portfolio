{"version":3,"file":"index.js","mappings":"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CAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://mt-card/./src/edit.js","webpack://mt-card/./src/index.js","webpack://mt-card/../../components/post-picker/post-picker.js","webpack://mt-card/./src/editor.scss?1ef9","webpack://mt-card/./src/style.scss?95d4","webpack://mt-card/../../components/post-picker/post-picker.scss?c812","webpack://mt-card/external window [\"wp\",\"blockEditor\"]","webpack://mt-card/external window [\"wp\",\"blocks\"]","webpack://mt-card/external window [\"wp\",\"components\"]","webpack://mt-card/external window [\"wp\",\"data\"]","webpack://mt-card/external window [\"wp\",\"element\"]","webpack://mt-card/external window [\"wp\",\"i18n\"]","webpack://mt-card/external window [\"wp\",\"serverSideRender\"]","webpack://mt-card/webpack/bootstrap","webpack://mt-card/webpack/runtime/chunk loaded","webpack://mt-card/webpack/runtime/compat get default export","webpack://mt-card/webpack/runtime/define property getters","webpack://mt-card/webpack/runtime/hasOwnProperty shorthand","webpack://mt-card/webpack/runtime/make namespace object","webpack://mt-card/webpack/runtime/jsonp chunk loading","webpack://mt-card/webpack/before-startup","webpack://mt-card/webpack/startup","webpack://mt-card/webpack/after-startup"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport ServerSideRender from '@wordpress/server-side-render';\nimport { PostPicker } from '../../../components/post-picker/post-picker';\nimport './editor.scss';\n\nexport default function Edit({\n\tattributes: {\n\t\tpostID,\n\t\tpostTitle,\n\t\tpostType,\n\t\tpostTypeTitle\n\t},\n\tisSelected,\n\tsetAttributes\n}) {\n\n\tconst blockProps = useBlockProps({\n\t\tclassName: `mt-card__wrap`,\n\t});\n\treturn (\n\t\t<div {...useBlockProps(blockProps)}>\n\t\t\t{(isSelected || postID === 0)\n\t\t\t\t? <PostPicker\n\t\t\t\t\tpostCustomLabel='Select a Team Member'\n\t\t\t\t\tpostID={postID}\n\t\t\t\t\tpostTitle={postTitle}\n\t\t\t\t\tpostType={postType}\n\t\t\t\t\tpostTypeTitle={postTypeTitle}\n\t\t\t\t\tsetAttributes={setAttributes}\n\t\t\t\t/>\n\t\t\t\t: <ServerSideRender\n\t\t\t\t\tblock=\"mx/mt-card\"\n\t\t\t\t\tattributes={{\n\t\t\t\t\t\tpostID: postID,\n\t\t\t\t\t\tpostTitle: postTitle,\n\t\t\t\t\t\tpostType: postType,\n\t\t\t\t\t\tpostTypeTitle: postTypeTitle\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\t);\n}\n","import { registerBlockType } from '@wordpress/blocks';\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\n\nregisterBlockType('mx/mt-card', {\n\tapiVersion: 2,\n\ttitle: 'Management Team Card',\n\ticon: 'id-alt',\n\tcategory: 'cards',\n\tdescription: 'Basic card block to display a management team member.',\n\tattributes: {\n\t\tpostID: {\n\t\t\ttype: 'number',\n\t\t\tdefault: 0\n\t\t},\n\t\tpostTitle: {\n\t\t\ttype: 'string',\n\t\t},\n\t\tpostType: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'management-team'\n\t\t},\n\t\tpostTypeTitle: {\n\t\t\ttype: 'string',\n\t\t}\n\t},\n\tparent: [\n\t\t'mx/column',\n\t\t'mx/group'\n\t],\n\tedit: Edit,\n});\n","import { __ } from '@wordpress/i18n';\nimport { useSelect, select } from '@wordpress/data';\nimport { useEffect, useState } from '@wordpress/element';\nimport { ComboboxControl, Spinner } from '@wordpress/components';\nimport './post-picker.scss';\n\n/**\n * @example\n * <PostPicker\n *    @param {string} postCustomLabel - (Optional label above the post selector)\n *    @param {number} postID - (Attribute to capture the selected post ID)\n *    @param {string} postTitle - (Attribute to capture the selected post Title)\n *    @param {string} postType - (Attribute to capture the selected post type)\n *    @param {string} postTypeTitle - (Attribute to capture the selected post type title)\n *    @param {func} setAttributes - (Function to set state of postID, postTitle, postType, postTypeTitle)\n * />\n */\nexport const PostPicker = ({ postCustomLabel, postID, postTitle, postType, postTypeTitle, setAttributes }) => {\n\tlet postTypeOptions = [];\n\tlet postOptions = [];\n\tconst [filteredPostTypeOptions, setFilteredPostTypeOptions] = useState(postTypeOptions);\n\tconst [filteredPostOptions, setFilteredPostOptions] = useState(postOptions);\n\n\t/* Format postTypeTitle on load */\n\tuseEffect(() => {\n\t\tif (postType) {\n\t\t\tlet rawTitle = postType.replace(/-|_/g, ' ');\n\t\t\tlet words = rawTitle.split(' ');\n\t\t\tfor (let i = 0; i < words.length; i++) {\n\t\t\t\twords[i] = words[i].charAt(0).toUpperCase() + words[i].slice(1);\n\t\t\t}\n\t\t\tlet formattedTitle = words.join(' ');\n\t\t\tsetAttributes({\n\t\t\t\tpostID,\n\t\t\t\tpostTitle,\n\t\t\t\tpostType: postType,\n\t\t\t\tpostTypeTitle: formattedTitle,\n\t\t\t});\n\t\t}\n\t}, []);\n\n\t/* Get all post type options */\n\tconst postTypes = useSelect((select) => {\n\t\treturn select('core').getPostTypes({ per_page: -1 });\n\t});\n\n\t/* Loop through post types and add to postTypeOptions, exclude unecessary types */\n\tif (postTypes) {\n\t\tpostTypes.forEach((postType) => {\n\t\t\tif (postType.slug !== 'attachment' && postType.slug !== 'wp_block' && postType.slug !== 'nav_menu_item' && postType.slug !== 'wp_template' && postType.slug !== 'wp_template_part' && postType.slug !== 'wp_navigation' && postType.slug !== 'style-guide') {\n\t\t\t\tpostTypeOptions.push({ value: postType.slug, label: postType.name });\n\t\t\t}\n\t\t});\n\t}\n\n\t/* Get all posts based on selected post type */\n\tconst posts = useSelect((select) => {\n\t\treturn select('core').getEntityRecords('postType', postType);\n\t});\n\n\t/* Loop through posts and add to postOptions */\n\tif (posts) {\n\t\tpostOptions.push({ value: 0, label: 'Search by post title...' });\n\t\tposts.forEach((post) => {\n\t\t\tpostOptions.push({ value: post.id, label: post.title.rendered });\n\t\t});\n\t}\n\n\t/* Event handlers */\n\tconst handlePostTypeChange = (value) => {\n\t\tlet rawTitle = value.replace(/-|_/g, ' ');\n\t\tlet words = rawTitle.split(' ');\n\t\tfor (let i = 0; i < words.length; i++) {\n\t\t\twords[i] = words[i].charAt(0).toUpperCase() + words[i].slice(1);\n\t\t}\n\t\tlet formattedTitle = words.join(' ');\n\t\tsetAttributes({\n\t\t\tpostID,\n\t\t\tpostTitle,\n\t\t\tpostType: value,\n\t\t\tpostTypeTitle: formattedTitle,\n\t\t});\n\t}\n\n\tconst handlePostTypeClear = () => {\n\t\tconsole.log('type clear');\n\t\tsetAttributes({\n\t\t\tpostID: 0,\n\t\t\tpostTitle: '',\n\t\t\tpostType: null,\n\t\t\tpostTypeTitle: '',\n\t\t});\n\t}\n\n\tconst handlePostChange = (value) => {\n\t\tconst postData = select('core').getEntityRecord('postType', postType, value);\n\t\tsetAttributes({\n\t\t\tpostID: value,\n\t\t\tpostTitle: postData.title.rendered,\n\t\t\tpostType,\n\t\t\tpostTypeTitle\n\t\t});\n\t}\n\n\tconst handlePostClear = () => {\n\t\tconsole.log('post clear');\n\t\tsetAttributes({\n\t\t\tpostID: 0,\n\t\t\tpostTitle: '',\n\t\t\tpostType,\n\t\t\tpostTypeTitle\n\t\t});\n\t}\n\treturn (\n\t\t<div className='post-picker'>\n\t\t\t<div className='post-picker__post-type'>\n\t\t\t\t{\n\t\t\t\t\t/* If postType is set, display Post Title and clear button */\n\t\t\t\t\t(postType !== null) ?\n\t\t\t\t\t\t<div className='post-picker__preview'>\n\t\t\t\t\t\t\t<label>Post Type</label>\n\t\t\t\t\t\t\t<p className='post-picker__title'>{postTypeTitle}</p>\n\t\t\t\t\t\t\t<button className='post-picker__clear components-button is-primary' onClick={handlePostTypeClear}>Clear Post Type</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t/* If postType is not set yet, but options are loaded, show combobox */\n\t\t\t\t\t\t: (postType === null && postTypeOptions.length > 0) ?\n\t\t\t\t\t\t\t<ComboboxControl\n\t\t\t\t\t\t\t\tlabel='Select a Post Type'\n\t\t\t\t\t\t\t\tvalue={postType}\n\t\t\t\t\t\t\t\tonChange={handlePostTypeChange}\n\t\t\t\t\t\t\t\toptions={filteredPostTypeOptions}\n\t\t\t\t\t\t\t\tonFilterValueChange={(inputValue) =>\n\t\t\t\t\t\t\t\t\tsetFilteredPostTypeOptions(\n\t\t\t\t\t\t\t\t\t\tpostTypeOptions.filter((postTypeOption) =>\n\t\t\t\t\t\t\t\t\t\t\tpostTypeOption.label\n\t\t\t\t\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t\t\t\t\t.startsWith(inputValue.toLowerCase())\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t/* Else show loading */\n\t\t\t\t\t\t\t: <div className='post-picker__spinner'>\n\t\t\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t\t\t\t<span>{__('Loading post types...', 'mx-blocks-plugin')}</span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<div class='post-picker__posts'>\n\t\t\t\t{\n\t\t\t\t\t/* If postID is set, display Post Title and clear button */\n\t\t\t\t\t(postID !== 0) ?\n\t\t\t\t\t\t<div className='post-picker__preview'>\n\t\t\t\t\t\t\t<label>Post Title</label>\n\t\t\t\t\t\t\t<p className='post-picker__title'>{postTitle}</p>\n\t\t\t\t\t\t\t<button className='post-picker__clear components-button is-primary' onClick={handlePostClear}>Clear Post</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t/* If postID is not set, but options have loaded show combobox */\n\t\t\t\t\t\t: (postID === 0 && postOptions.length > 0) ?\n\t\t\t\t\t\t\t<ComboboxControl\n\t\t\t\t\t\t\t\tlabel={postCustomLabel ? postCustomLabel : `Select a Post`}\n\t\t\t\t\t\t\t\tvalue={postID}\n\t\t\t\t\t\t\t\tonChange={handlePostChange}\n\t\t\t\t\t\t\t\toptions={filteredPostOptions}\n\t\t\t\t\t\t\t\tonFilterValueChange={(inputValue) =>\n\t\t\t\t\t\t\t\t\tsetFilteredPostOptions(\n\t\t\t\t\t\t\t\t\t\tpostOptions.filter((postOption) =>\n\t\t\t\t\t\t\t\t\t\t\tpostOption.label\n\t\t\t\t\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t\t\t\t\t.startsWith(inputValue.toLowerCase())\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t/* Else show spinner */\n\t\t\t\t\t\t\t: (postType !== null && postID !== 0 && postOptions.length === 0) ?\n\t\t\t\t\t\t\t\t<div className='post-picker__spinner'>\n\t\t\t\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t\t\t\t\t<span>{__('Loading posts...', 'mx-blocks-plugin')}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t: null\n\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"serverSideRender\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkmt_card\"] = globalThis[\"webpackChunkmt_card\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useBlockProps","ServerSideRender","PostPicker","Edit","attributes","postID","postTitle","postType","postTypeTitle","isSelected","setAttributes","blockProps","className","registerBlockType","apiVersion","title","icon","category","description","type","default","parent","edit","useSelect","select","useEffect","useState","ComboboxControl","Spinner","postCustomLabel","postTypeOptions","postOptions","filteredPostTypeOptions","setFilteredPostTypeOptions","filteredPostOptions","setFilteredPostOptions","rawTitle","replace","words","split","i","length","charAt","toUpperCase","slice","formattedTitle","join","postTypes","getPostTypes","per_page","forEach","slug","push","value","label","name","posts","getEntityRecords","post","id","rendered","handlePostTypeChange","handlePostTypeClear","console","log","handlePostChange","postData","getEntityRecord","handlePostClear","inputValue","filter","postTypeOption","toLowerCase","startsWith","postOption"],"sourceRoot":""}